version: '3.7'

services:
  # Main Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cropchain_app
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=cropchain
      - IPFS_HOST=ipfs
      - IPFS_PORT=5001
      - PORT=3000
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - ipfs
      - orderer.example.com
      - peer0.org1.example.com
    command: >
      bash -c "
        # This script will run inside the container to set up the network
        /workspace/scripts/setup-fabric.sh &&
        # After setup, it starts the application
        npm start
      "

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: cropchain_mysql
    restart: always
    environment:
      MYSQL_DATABASE: cropchain
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql

  # IPFS Service
  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: cropchain_ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs

  # --- FABRIC NETWORK SERVICES ---
  ca.org1.example.com:
    extends:
      file: fabric-network/docker-compose-fabric.yaml
      service: ca.org1.example.com
  orderer.example.com:
    extends:
      file: fabric-network/docker-compose-fabric.yaml
      service: orderer.example.com
  peer0.org1.example.com:
    extends:
      file: fabric-network/docker-compose-fabric.yaml
      service: peer0.org1.example.com

volumes:
  mysql_data:
  ipfs_data:
